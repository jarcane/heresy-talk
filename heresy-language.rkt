#lang racket

(provide the-heresy-language)

(define the-heresy-language
  '(!
    #%app
    #%datum
    #%module-begin
    #%top
    #%top-interaction
    &
    *
    +
    -
    ->
    ->>
    ...
    /
    :=
    :>
    :_
    <
    =
    =$
    >
    ?
    ^
    _
    abs
    alist-merge
    alist-ref
    all-defined-out
    and
    app
    append
    append1
    apply
    as
    assoc
    atom?
    break
    carry
    case
    compose
    cos
    cry
    dec
    def
    def-field-id
    define-syntax-parser
    define-thing-literal-ids
    describe
    do
    do-loop
    do>
    e
    else
    empty$?
    eof
    eof?
    eq?
    equal?
    error
    even?
    exp
    extends
    f>
    False
    file
    filter
    fn
    fn?
    fnlet
    foldl
    foldr
    for
    for-loop
    format$
    gen-range
    head
    head$
    heads
    if
    import
    in
    inc
    index
    index*
    inherit
    inlst
    input
    instr
    int
    join
    l>
    lat?
    left
    left$
    len
    len$
    let
    list
    list$
    list&
    list?
    lit
    m
    macro
    macroset
    make-thing
    map
    mid
    mid$
    mod
    not
    Null
    null?
    number?
    odd?
    one?
    or
    partial
    pi
    print
    provide
    quasiquote
    quote
    randomize
    range
    rem
    require
    return
    reverse
    right
    right$
    rkt
    rnd
    run
    select
    Self
    send
    send*
    send+
    sgn
    sin
    slice
    slice$
    sort
    split
    State
    step
    str$
    string?
    stx
    subst
    super
    symbol?
    tail
    tail$
    tan
    then
    thing
    timer
    to
    True
    unquote
    unquote-splicing
    using
    with
    Y
    Y*
    zero?
    zip
    zipwith
    Î»lst-sym))